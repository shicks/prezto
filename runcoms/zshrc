#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...


# Mac-specific customizations
if [ -d /Users/sdh ]; then
  # The next line updates PATH for the Google Cloud SDK.
  source '/Users/sdh/local/opt/google-cloud-sdk/path.zsh.inc'

  # The next line enables shell command completion for gcloud.
  source '/Users/sdh/local/opt/google-cloud-sdk/completion.zsh.inc'

  PATH=$HOME/local/bin:$PATH
  export DYLD_LIBRARY_PATH=/Users/sdh/local/opt/rust/lib/rustlib/x86_64-apple-darwin/lib
fi

# Set options and handle some other stuff:

setopt NO_BANG_HIST           # Don't treat '!' special
setopt PUSHD_MINUS            # Invert the sign of dir stack
setopt NO_NOMATCH             # Don't cause errors when globbing fails
setopt INTERACTIVE_COMMENTS   # Comments are allowed interactively
setopt AUTO_PUSHD             # Automatically push dirs onto stack
unsetopt BRACE_CCL            # Don't expand a{bc}d to (abd acd)
unsetopt EXTENDED_GLOB        # Don't interpret commit^ as a glob

### TODO(sdh): what does this do?
# zstyle ':completion:*' completer _complete _ignored _files


# Fix a few keybindings (from URXVT, tmux, etc):
function noop { :; }
zle -N noop
bindkey '\e[5~' noop # Page up and Page down
bindkey '\e[6~' noop

function backward-word-tmux {
  case "$TERM" in
    (tmux-*|xterm-256color-italic) zle backward-char ;;
    (*) zle backward-word ;;
   esac
}
zle -N backward-word-tmux

function forward-word-tmux {
  case "$TERM" in
    (tmux-*|xterm-256color-italic) zle forward-char ;;
    (*) zle forward-word ;;
  esac
}
zle -N forward-word-tmux

function backward-char-tmux {
  case "$TERM" in
    (tmux-*|xterm-256color-italic) zle backward-word ;;
    (*) zle backward-char ;;
   esac
}
zle -N backward-char-tmux

function forward-char-tmux {
  case "$TERM" in
    (tmux-*|xterm-256color-italic) zle forward-word ;;
    (*) zle forward-char ;;
   esac
}
zle -N forward-char-tmux

bindkey '\eOD' backward-word-tmux; bindkey '\eOd' backward-word-tmux
bindkey '\e[D' backward-char-tmux
bindkey '\eOC' forward-word-tmux;  bindkey '\eOc' forward-word-tmux
bindkey '\e[C' forward-char-tmux


# Mac bindings for ctrl-arrow
function backward-word-mac { zle backward-word }
zle -N backward-word-mac
function forward-word-mac { zle forward-word }
zle -N forward-word-mac
bindkey '\e[1;5D' backward-word-mac; bindkey '\e\e[D' backward-word-mac
bindkey '\e[1;5C' forward-word-mac; bindkey '\e\e[C' forward-word-mac

# TODO(sdh): try to have $foo:A not parameter-expand.
# accept-line() {
#   BUFFER=$(echo "$BUFFER" | sed 's/(\$[a-zA-Z_]+):/\1\\:/g')
#   zle .$WIDGET
# }
# zle -N accept-line

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if which fzf-tmux &> /dev/null; then
  alias fzf=fzf-tmux
  FZF_TMUX=1
fi

# Redefine fzf-history-widget
# CTRL-R - Paste the selected command from history into the command line
#   - enter runs, tab edits
fzf-history-widget() {
  local selected num run
  setopt localoptions noglobsubst noposixbuiltins pipefail 2> /dev/null
  selected=( $(fc -l 1 |
    FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS --tac -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort --expect=tab $FZF_CTRL_R_OPTS --query=${(q)LBUFFER} +m" $(__fzfcmd)) )
  local ret=$?
  if [ -n "$selected" ]; then
    run=true
    if [ "${selected[1]}" = "tab" ]; then
      run=false
      selected=(${selected[2,-1]})
    fi
    num=${selected[1]}
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
      if $run; then zle accept-line; fi
    fi
  fi
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}
